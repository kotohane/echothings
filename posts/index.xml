<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Echo Things</title>
        <link>/posts/</link>
        <description>Recent content in Posts on Echo Things</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Tue, 15 Sep 2020 23:29:24 +0800</lastBuildDate>
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>机器人运行状态检测系统</title>
            <link>/posts/proj-spmat/</link>
            <pubDate>Tue, 15 Sep 2020 23:29:24 +0800</pubDate>
            
            <guid>/posts/proj-spmat/</guid>
            <description>关于项目 名称 机器人运行状态检测系统 Feature Exaction and Motion Estimation in Robot Navigation 地址 kotohane/spmat 想法来源 大二的时候在实验室的各种学习中（当时觉得学的太杂了什么都没学会，现在觉得当时</description>
            <content type="html"><![CDATA[<h2 id="关于项目">关于项目</h2>
<h3 id="名称">名称</h3>
<ul>
<li>机器人运行状态检测系统</li>
<li>Feature Exaction and Motion Estimation in Robot Navigation</li>
</ul>
<h3 id="地址">地址</h3>
<p><a href="https://www.github.com/kotohane/spmat">kotohane/spmat</a></p>
<h3 id="想法来源">想法来源</h3>
<p>大二的时候在实验室的各种学习中（当时觉得学的太杂了什么都没学会，现在觉得当时学的东西太有用了，只恨自己学的太少了），学了SLAM和深度学习这两个基本没有交集的东西。
SLAM一般用于稠密建图，深度学习一般用来pattern recognition，各自都有很强、很专用的应用领域，但在这个领域之外一般很少能用得到，就算能用得到也是蹭一蹭热度，不起核心作用。</p>
<p>当时就在想有没有可能吧这两个东西结合起来使用，可以使用的没有那么紧密。正好，当时在做驾驶员疲劳度项目，因为没有什么思路，又是强商业化的领域，自己一个人做极度缺少数据（或者说缺少资金），觉得没有什么前途，就自己开了这个项目。</p>
<p>一般使用视觉对于一个机器进行识别（伺服之类的）都是使用外部的摄像头，然后对机器进行特征点提取等操作，在判断动作状态上不免会收到局限，因为目前在这种提取算法的情况下，识别的精度和准确度都不是很好，而把摄像头放在机械臂上，使用外部的特征点这个想法理论上会比原来的方法精确度更高，因为这些采取的特征点更多，有少量的误识别都可以自己纠正过来。</p>
<h3 id="目标">目标</h3>
<p>判定机器人的运行状态（预设的）</p>
<h3 id="总体思路">总体思路</h3>
<p>使用固定在机器人上的摄像头采集周围环境的SIFT特征点，进行特征点匹配，计算出每两帧之间的运动情况，再把一段时间内的运动情况放进神经网络里，训练出模型。在实际运行时就可以直接判断了。</p>
<h3 id="成果">成果</h3>
<p>目前有一篇期刊的论文再投，已经修改过提交了，希望能中吧。</p>
<h2 id="具体过程">具体过程</h2>
<h3 id="1-图像处理">1. 图像处理</h3>
<p>先灰度化，然后再去模糊，由于提取SIFT特征点已经是一个比较成熟的算法了，这里不需要过于去追求这个速度。</p>
<p>机器一般被设定为是在室内，所以特征点会相当稠密，这时候应该设定好SIFT特征点采集的阈值，在检测速度和检测到的特征点数量之间达成一个平衡。</p>
<h3 id="2-对极约束epipolar">2. 对极约束（epipolar）</h3>
<p>2D-2D点的匹配，求出本质矩阵（旋转+位移）。这个具体的公式我就不一一说了，推导起来不是很复杂。</p>
<p>这方面具体的内容可以见<a href="https://github.com/gaoxiang12/slambook">《高翔SLAM24讲》</a>以及Courcera里<a href="https://www.coursera.org/learn/robotics-perception/">UPenn关于Robotics的Specialization</a>。</p>
<h3 id="3-数据整理">3. 数据整理</h3>
<p>这一步已经把每两帧之间的运动变化求出来了。这里注意一点，由于2D的尺度特性，位移只能确定方向而无法确定具体的长度。下一步就是如何利用时间信息。</p>
<p>由于每两帧之间的时间间隔（或者说是帧率）不同，所以对时间轴进行对齐是有必要的。进行对齐后再把一段时间内的运动状态全部合起来，成为一个向量，这个向量将会作为接下来神经网络的输入。</p>
<p>这里引入了2个系统参数，时间的最小单位以及使用多少个这样的单位进行判断。</p>
<h3 id="4-训练">4. 训练</h3>
<p>神经网络不能用的太复杂，输入只有50维。这里采用的就是最简单的网络，1个input，1个output，2个hidden layer。</p>
<p>由于网络相对来说比较简单，训练过程需要的数据量不是很复杂，一个人就足以采集。</p>
<h3 id="5-实时判断">5. 实时判断</h3>
<p>至此，整个工程已经基本完成了，判断的准确度出乎意料的还是挺高的。目前测试下来4个动作的识别准确的95%+是没有什么问题的。</p>
<h2 id="工程细节">工程细节</h2>
<ul>
<li>对于特征点提取方面使用C++，而网络训练方面采用python（pytorch框架）。</li>
<li>系统参数有「相机内参」、「SIFT特征点阈值」、「时间的最小单位」、「使用多少个这样的单位」，采用配置文件的方式进行配置。</li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Control of Mobile Robots</title>
            <link>/posts/cource-mobilerobot/</link>
            <pubDate>Mon, 10 Aug 2020 00:39:24 +0800</pubDate>
            
            <guid>/posts/cource-mobilerobot/</guid>
            <description>class info  courcera Getech class link  cource review not so difficult
Notes Mobile Robots Decrete time: $$ x_{k+1}=f(x_k, u_k) $$ Continuous time: $$ \frac{dx}{dt}=\dot x =f(x, u) $$ c.s. : map continuous -&amp;gt; discrete
Taylor approx: $$ x(k\delta t+\delta t)=x(k\delta t)+\delta t\cdot \dot{x}(k\delta t) $$
PID regulator $$ u(t) = K_pe(t)+K_i \int^t_0{e(\tau)d\tau}+ K_d\frac{de(t)}{dt} $$
 P : contribute to stability, resp. medium rate I : tracking, resp. slow rate, may cause oscillation D: resp.</description>
            <content type="html"><![CDATA[<h2 id="class-info">class info</h2>
<ul>
<li>courcera</li>
<li>Getech</li>
<li><a href="https://www.coursera.org/learn/mobile-robot/home/welcome">class link</a></li>
</ul>
<h2 id="cource-review">cource review</h2>
<p>not so difficult</p>
<h2 id="notes">Notes</h2>
<h3 id="mobile-robots">Mobile Robots</h3>
<p>Decrete time:
$$
x_{k+1}=f(x_k, u_k)
$$
Continuous time:
$$
\frac{dx}{dt}=\dot x =f(x, u)
$$
c.s. : map continuous -&gt; discrete</p>
<p>Taylor approx:
$$
x(k\delta t+\delta t)=x(k\delta t)+\delta t\cdot \dot{x}(k\delta t)
$$</p>
<h3 id="pid-regulator">PID regulator</h3>
<p>$$
u(t) = K_pe(t)+K_i \int^t_0{e(\tau)d\tau}+ K_d\frac{de(t)}{dt}
$$</p>
<ul>
<li>P : contribute to stability, resp. medium rate</li>
<li>I : tracking, resp. slow rate, may cause oscillation</li>
<li>D: resp. Fast rate, sensitive to noise</li>
<li>PID : most uesd low level control ( stability not guarantee )</li>
</ul>
<p><strong>implement</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-matlab" data-lang="matlab">read e
e_dot = e <span style="color:#f92672">-</span> e_old
E <span style="color:#f92672">+</span>= e
u = kp<span style="color:#f92672">*</span>e <span style="color:#f92672">+</span> kd<span style="color:#f92672">*</span>e_dot <span style="color:#f92672">+</span> ki <span style="color:#f92672">*</span> E
e_old = e
</code></pre></div><h3 id="behaviors">Behaviors</h3>
<ol>
<li>Go-to-goal</li>
<li>Avoid-obstacles</li>
<li>Follow-walls-clockwise</li>
<li>Follow-walls-counter-clockwise</li>
<li>induce mode</li>
</ol>
<p><strong>arbitration</strong></p>
<ol>
<li>Winner takers all == hard switches</li>
<li>Blending == conbined behavior</li>
</ol>
<h3 id="models">Models</h3>
<p>$$
\begin{cases}
\dot{x}=Ax+Bu \\
y=Cx
\end{cases}
$$</p>
<h4 id="point-mass">point mass</h4>
<p>$$
\begin{cases}
x_1 = p \\
x_2 = \dot{p} = \dot{x}
\end{cases}
$$</p>
<p>$$
\dot x =
\begin{bmatrix}
x_2 \\
u
\end{bmatrix} =
\begin{bmatrix}
0 &amp; 1 \\
0 &amp; 0
\end{bmatrix}
\begin{bmatrix}
x_1 \\
x_2
\end{bmatrix}
+
\begin{bmatrix}
0 \\
1
\end{bmatrix}
u
$$</p>
<p>$$
A =
\begin{bmatrix}
0 &amp; 1 \\
0 &amp; 0
\end{bmatrix}
,
B =
\begin{bmatrix}
0 \\
1
\end{bmatrix}
,
C =
\begin{bmatrix}
1 &amp; 0
\end{bmatrix}
$$</p>
<h4 id="car-model">Car model</h4>
<p>$$
A =
\begin{bmatrix}
0 &amp; 1 \\
0 &amp; -\gamma
\end{bmatrix}
,
B =
\begin{bmatrix}
0 \\
c/m
\end{bmatrix}
$$</p>
<h3 id="linearization">Linearization</h3>
<p>$$
A = \frac{\partial f}{\partial x} (x_0, u_0),
B = \frac{\partial f}{\partial u} (x_0, u_0),
C = \frac{\partial h}{\partial x} (x_0)
$$</p>
<p>in this process, <strong>Jacobian Matrix</strong>:
$$
\frac{\partial f}{\partial u} = \left[
\begin{matrix}
\frac{\partial f_1}{\partial u_1} &amp; \frac{\partial f_1}{\partial u_2} &amp;
\frac{\partial f_1}{\partial u_3} &amp; … &amp; 	\frac{\partial f_1}{\partial u_m} \\
\frac{\partial f_2}{\partial u_1} &amp; … &amp; … &amp; … &amp;…\\
\frac{\partial f_3}{\partial u_1} &amp; … &amp; … &amp; … &amp;… \\
… &amp; … &amp; … &amp; … &amp;…\\
\frac{\partial f_n}{\partial u_1} &amp; … &amp; … &amp; … &amp;
\frac{\partial f_n}{\partial u_m}
\end{matrix}
\right]
$$</p>
<h3 id="stability">Stability</h3>
<ul>
<li>
<p>Asymptotically stable:
$$
x(t) \rightarrow 0, \forall x(0) \\
Re(\lambda)&lt;0, \forall x \in eig(A), \ \ \ if\ and\ only\ if
$$</p>
</li>
<li>
<p>Unstable:
$$
\exist x(0), ||x(t)|| \rightarrow \infty \\
\exist \lambda \in eig(A), Re(\lambda)&gt;0, \ \ \ if
$$</p>
</li>
<li>
<p>critically stable:
$$
Re(\lambda) \leq 0, \forall \lambda \in eig(A), \ \ \ only\ if
$$</p>
</li>
</ul>
<h3 id="controlability">Controlability</h3>
<ul>
<li>
<p>Completely Controllable (CC) Theorem 1:</p>
<p><strong>The system is CC if and only if</strong>
$$
rank(\Gamma)=n
$$</p>
</li>
<li>
<p>Completely Controllable (CC) Theorem 2:</p>
<p><strong>Pole-placement to arbitrary eigenvalues is possible if and only of the system is CC</strong></p>
</li>
</ul>
<p>Code in Matlab:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-matlab" data-lang="matlab">G = ctrb(A, B)
rank(G)
</code></pre></div><h3 id="obvervability">Obvervability</h3>
<p><strong>CO def.</strong> : system is completely observable if it is possible to recover the initial state from the output</p>
<ul>
<li>
<p>Completely Observable (CO) Theorem 1:</p>
<p><strong>The system is CO if and only if</strong>
$$
rank(\Omega) = n
$$</p>
</li>
<li>
<p>Completely Observable (CO) Theorem 2:</p>
<p><strong>Pole-placement to arbitrary eigenvalues is possible if and only if the system is CO</strong></p>
</li>
</ul>
<h3 id="plan-structure">Plan structure</h3>
<p>Obverse + error &ndash;&gt; controller</p>
<p>Response &ndash;&gt; actual world</p>
]]></content>
        </item>
        
        <item>
            <title>Some problems during configing url of hugo</title>
            <link>/posts/new/</link>
            <pubDate>Tue, 21 Jul 2020 13:46:38 +0800</pubDate>
            
            <guid>/posts/new/</guid>
            <description>Problem: 设定posts和tags目录时跳转不对，会出现类似于&amp;lt;website&amp;gt;/&amp;lt;website&amp;gt;/post之类的情况
Solution: 在config中设置post item的跳转地址为post，代表绝对路径，而不是/post，代表相对位置。
如果设置为/post，在主界面可以正常跳转，但在其他界面无法转到正常的页面。./post也同理。</description>
            <content type="html"><![CDATA[<h3 id="problem">Problem:</h3>
<p>设定posts和tags目录时跳转不对，会出现类似于<code>&lt;website&gt;/&lt;website&gt;/post</code>之类的情况</p>
<h3 id="solution">Solution:</h3>
<p>在config中设置post item的跳转地址为<code>post</code>，代表绝对路径，而不是<code>/post</code>，代表相对位置。</p>
<p>如果设置为<code>/post</code>，在主界面可以正常跳转，但在其他界面无法转到正常的页面。<code>./post</code>也同理。</p>
]]></content>
        </item>
        
    </channel>
</rss>
